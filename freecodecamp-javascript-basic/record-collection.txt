/*
Koleksi Rekaman
Anda diberi objek literal yang mewakili bagian dari koleksi album musik Anda. Setiap album memiliki nomor id unik sebagai kuncinya dan beberapa properti lainnya. Tidak semua album memiliki informasi yang lengkap.

Anda mulai dengan updateRecordsfungsi yang mengambil objek literal, records, berisi koleksi album musik, an id, a prop(seperti artistatau tracks), dan value. Selesaikan fungsi menggunakan aturan di bawah ini untuk memodifikasi objek yang diteruskan ke fungsi.

Fungsi Anda harus selalu mengembalikan seluruh objek koleksi rekaman.
Jika propbukan tracksdan valuebukan string kosong, perbarui atau setel album itu propke value.
Jika propada trackstetapi album tidak memiliki tracksproperti, buat larik kosong dan tambahkan valueke dalamnya.
Jika propadalah tracksdan valuebukan string kosong, tambahkan valueke akhir trackslarik album yang ada.
Jika valuestring kosong, hapus propproperti yang diberikan dari album.
Catatan: Salinan recordCollectionobjek digunakan untuk pengujian.

Tes
Menunggu :Setelah updateRecords(recordCollection, 5439, "artist", "ABBA"), artistseharusnya stringABBA
Menunggu :Setelah updateRecords(recordCollection, 5439, "tracks", "Take a Chance on Me"), tracksharus memiliki string Take a Chance on Mesebagai elemen terakhir dan satu-satunya.
Menunggu :Setelah updateRecords(recordCollection, 2548, "artist", ""), artisttidak boleh disetel
Menunggu :Setelah updateRecords(recordCollection, 1245, "tracks", "Addicted to Love"), tracksharus memiliki string Addicted to Lovesebagai elemen terakhir.
Menunggu :Setelah updateRecords(recordCollection, 2468, "tracks", "Free"), tracksharus memiliki string 1999sebagai elemen pertama.
Menunggu :Setelah updateRecords(recordCollection, 2548, "tracks", ""), trackstidak boleh disetel
Menunggu :Setelah updateRecords(recordCollection, 1245, "albumTitle", "Riptide"), albumTitleseharusnya stringRiptide
*/

// Setup
const recordCollection = {
  2548: {
    albumTitle: 'Slippery When Wet',
    artist: 'Bon Jovi',
    tracks: ['Let It Rock', 'You Give Love a Bad Name']
  },
  2468: {
    albumTitle: '1999',
    artist: 'Prince',
    tracks: ['1999', 'Little Red Corvette']
  },
  1245: {
    artist: 'Robert Palmer',
    tracks: []
  },
  5439: {
    albumTitle: 'ABBA Gold'
  }
};

// Only change code below this line
function updateRecords(records, id, prop, value) {
  
  // 2.
  if(value){
    if(prop !== "tracks"){
      records[id][prop] = value;
    }

    if(prop == "tracks"){
      // 3. 
      if(!records[id].hasOwnProperty("tracks")){
        records[id][prop] = [];
        records[id][prop].push(value);
      } else {
        // 4.
        records[id][prop].push(value);
      }
    }
  } else {
    // 5.
    delete records[id][prop];
  }
return records;
}

//Versi lain
// Only change code below this line
function updateRecords(records, id, prop, value) {
  if(value){
    // 3.
    if(prop == "tracks"){
      if(records[id].hasOwnProperty("tracks")){
        records[id][prop].push(value);
      } else {
        // 4.
        records[id][prop] = [];
        records[id][prop].push(value);
      }

    } else {
    // 2.
      records[id][prop] = value;
    }
  } else {
    // 5.
    delete records[id][prop]
  }

  // 1.
  return records;
}
updateRecords(recordCollection, 5439, "artist", "ABBA");
console.log(recordCollection);
